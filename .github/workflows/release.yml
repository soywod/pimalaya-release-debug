name: release

on:
  push:

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'version-${{ github.sha }}'
          release_name: 'version-${{ github.sha }}'
          draft: false
          prerelease: false

  deploy-releases:
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-linux
            os: ubuntu-latest
          - target: arm64-linux
            os: ubuntu-latest
          - target: x86_64-windows
            os: ubuntu-latest
          - target: x86_64-macos
            os: macos-latest
          - target: arm64-macos
            os: macos-latest
    steps:
      - name: Install Nix
        uses: cachix/install-nix-action@v24
        with:
          nix_path: nixpkgs=channel:nixos-23.11
          extra_nix_config: |
            experimental-features = nix-command flakes
      - uses: cachix/cachix-action@v12
        with:
          name: soywod
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build release archive
        run: |
          git clone https://git.sr.ht/~soywod/neverest-cli
          cd neverest-cli
          nix build -L .#${{ matrix.target }}
          cd ..
          cp neverest-cli/result/bin/neverest* .
      - name: Upload tgz release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: neverest.tgz
          asset_name: neverest.${{ matrix.target }}.tgz
          asset_content_type: application/gzip
      - name: Upload zip release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: neverest.zip
          asset_name: neverest.${{ matrix.target }}.zip
          asset_content_type: application/zip
